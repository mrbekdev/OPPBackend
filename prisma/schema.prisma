generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id        Int      @id @default(autoincrement())
  firstName String   @map("first_name")
  lastName  String   @map("last_name")
  login     String   @unique
  password  String
  phone     String?
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("users")
}

model Product {
  id        Int      @id @default(autoincrement())
  name      String
  count     Int
  size      String
  price     Float
  weight    Float    @default(0) // Weight in kg
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relations
  orderItems OrderItem[]

  @@map("products")
}

model Client {
  id        Int      @id @default(autoincrement())
  firstName String   @map("first_name")
  lastName  String   @map("last_name")
  phone     String   @unique
  rating    String?  // "good", "bad", or null (neutral)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relations
  orders Order[]

  @@map("clients")
}

model Order {
  id             Int         @id @default(autoincrement())
  clientId       Int         @map("client_id")
  status         OrderStatus @default(PENDING)
  fromDate       DateTime?
  toDate         DateTime?
  subtotal       Float       @default(0)
  tax            Float       @default(0)
  total          Float       @default(0)
  advancePayment Float       @default(0) @map("advance_payment")
  advanceUsed    Float       @default(0) @map("advance_used")
  returnedAt     DateTime?   @map("returned_at")
  createdAt      DateTime    @default(now()) @map("created_at")
  updatedAt      DateTime    @updatedAt @map("updated_at")

  // Relations
  client Client      @relation(fields: [clientId], references: [id], onDelete: Cascade)
  items  OrderItem[]

  @@map("orders")
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  orderId   Int      @map("order_id")
  productId Int      @map("product_id")
  quantity  Int
  returned  Int      @default(0)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  order   Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@map("order_items")
}

enum OrderStatus {
  PENDING
  DELIVERED
  PARTIALLY_RETURNED
  RETURNED
  COMPLETED
}